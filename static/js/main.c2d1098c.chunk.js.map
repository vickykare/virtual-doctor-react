{"version":3,"sources":["components/PredictDisease.js","components/DiseaseInput.js","components/Footer.js","components/Header.js","App.js","index.js"],"names":["PredictDisease","disease","message","className","DiseaseInput","useState","values","state","setState","animatedComponents","makeAnimated","Container","Form","onSubmit","e","preventDefault","length","console","log","Row","Col","md","components","isMulti","name","options","value","label","classNamePrefix","onChange","i","push","Button","type","Footer","Header","Navbar","bg","variant","Brand","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAsBeA,MApBf,YAA+C,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QACjC,OACE,gCACGD,EACC,oBAAGE,UAAU,cAAb,+CACqC,IACnC,qBAAKA,UAAU,eAAf,SAA+BF,OAE/B,KACHC,EACC,yCAEE,uBACCA,KAED,S,MCmEKE,MA7Ef,WACE,MAA0BC,mBAAS,CACjCC,OAAQ,GACRL,QAAS,OAFX,mBAAOM,EAAP,KAAcC,EAAd,KAIMC,EAAqBC,cA0C3B,OACE,mCACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAMC,SAhCO,SAACC,GAElB,GADAA,EAAEC,mBACER,EAAMD,OAAOU,OAAS,GAA1B,CAGmBT,EAAMD,OAQzBE,EAAS,CACPF,OAAQ,GACRL,QAAS,yBACTC,QAAS,0BAEXe,QAAQC,IAAI,OAASX,EAAMD,UAcvB,SACE,cAACa,EAAA,EAAD,CAAKhB,UAAU,qCAAf,SACE,eAACiB,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,oBAAIlB,UAAU,OAAd,6BACA,cAAC,IAAD,CACEmB,WAAYb,EACZc,SAAO,EACPC,KAAK,WACLC,QApBE,CACd,CAAEC,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,aAAcC,MAAO,cAC9B,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,IAAKC,MAAO,aACrB,CAAED,MAAO,IAAKC,MAAO,cACrB,CAAED,MAAO,IAAKC,MAAO,YAeTC,gBAAgB,SAChBC,SAtDK,SAACf,GAGlB,IADA,IAAIR,EAAS,GACJwB,EAAI,EAAGA,EAAIhB,EAAEE,OAAQc,IAC5BxB,EAAOyB,KAAKjB,EAAEgB,GAAGJ,OAEnBlB,EAAS,CACPF,OAAQA,OAiDCC,EAAMD,OAAOU,OAAS,EAAI,KACzB,mBAAGb,UAAU,eAAb,wCAEF,cAAC,EAAD,CAAgBF,QAASM,EAAMN,QAASC,QAASK,EAAML,UACvD,cAAC8B,EAAA,EAAD,CAAQ7B,UAAU,YAAY8B,KAAK,SAAnC,yCC9DCC,MATf,WACE,OACE,mCACE,uBACA,mBAAG/B,UAAU,cAAb,4C,SCkBSgC,MArBf,WACE,OACE,mCACE,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAA1B,SACE,cAAC3B,EAAA,EAAD,UACE,cAACyB,EAAA,EAAOG,MAAR,oC,MCWKC,MAdf,WACE,OACE,sBAAKrC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,YAAf,SACE,cAACQ,EAAA,EAAD,UACE,cAAC,EAAD,QAGJ,cAAC,EAAD,Q,MCVN8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c2d1098c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction PredictDisease({ disease, message }) {\r\n  return (\r\n    <div>\r\n      {disease ? (\r\n        <p className=\"text-center\">\r\n          According to predictions, You have{\" \"}\r\n          <big className=\"text-warning\">{disease}</big>\r\n        </p>\r\n      ) : null}\r\n      {message ? (\r\n        <p>\r\n          Message:\r\n          <br />\r\n          {message}\r\n        </p>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PredictDisease;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Col, Container, Row, Form } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport PredictDisease from \"./PredictDisease\";\r\nimport axios from \"axios\";\r\n\r\nfunction DiseaseInput() {\r\n  const [state, setState] = useState({\r\n    values: [],\r\n    disease: null,\r\n  });\r\n  const animatedComponents = makeAnimated();\r\n  let handleChange = (e) => {\r\n    // console.log(e.length);\r\n    let values = [];\r\n    for (let i = 0; i < e.length; i++) {\r\n      values.push(e[i].value);\r\n    }\r\n    setState({\r\n      values: values,\r\n      //   disease: state.disease,\r\n      //   message: state.message,\r\n    });\r\n  };\r\n  let handlesubmit = (e) => {\r\n    e.preventDefault();\r\n    if (state.values.length < 4) {\r\n      return;\r\n    }\r\n    let data = { data: state.values };\r\n    // axios.post(\"https://www.domain.com/\", data).then((response) =>\r\n    //   setState({\r\n    //     values: [],\r\n    //     disease: response.data.disease,\r\n    //     message: response.data.message,\r\n    //   })\r\n    // );\r\n    setState({\r\n      values: [],\r\n      disease: \" response.data.disease\",\r\n      message: \"response.data.message\",\r\n    });\r\n    console.log(\"how \" + state.values);\r\n  };\r\n  const options = [\r\n    { value: \"chocolate\", label: \"Chocolate\" },\r\n    { value: \"strawberry\", label: \"Strawberry\" },\r\n    { value: \"vanilla\", label: \"Vanilla\" },\r\n    { value: \"1\", label: \"Chocolate\" },\r\n    { value: \"2\", label: \"Strawberry\" },\r\n    { value: \"3\", label: \"Vanilla\" },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Form onSubmit={handlesubmit}>\r\n          <Row className=\"d-flex justify-content-center py-5\">\r\n            <Col md={6}>\r\n              <h1 className=\"py-3\">Select Symptoms</h1>\r\n              <Select\r\n                components={animatedComponents}\r\n                isMulti\r\n                name=\"diseases\"\r\n                options={options}\r\n                classNamePrefix=\"select\"\r\n                onChange={handleChange}\r\n              />\r\n              {state.values.length > 3 ? null : (\r\n                <p className=\"text-warning\">*Select atleast 4 symptoms</p>\r\n              )}\r\n              <PredictDisease disease={state.disease} message={state.message} />\r\n              <Button className=\"py-3 my-3\" type=\"submit\">\r\n                Predict Disease\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DiseaseInput;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <hr />\r\n      <p className=\"text-center\">Made with ‚ù§ by VGroup</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Container, Navbar } from \"react-bootstrap\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Container>\r\n          <Navbar.Brand>\r\n            {/* <img\r\n            alt=\"\"\r\n            src=\"/logo.svg\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n          />{\" \"} */}\r\n            Virtual Doctor\r\n          </Navbar.Brand>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { Container } from \"react-bootstrap\";\nimport DiseaseInput from \"./components/DiseaseInput\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport \"./styles/main.css\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"main-body\">\n        <Container>\n          <DiseaseInput />\n        </Container>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./bootstrap.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}